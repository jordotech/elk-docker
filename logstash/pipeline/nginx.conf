input {
  udp {
        port => 1025
        queue_size => 50000
        type => "nginx"
  }
}
filter {





if [program] == "nginx_access" {
grok {
            patterns_dir => "/usr/share/logstash/patterns"
            match => {
                "message" => "%{NGINX_ACCESS}"
            }
            remove_tag => ["nginx_access", "_grokparsefailure"]
            add_field => {
                    "type" => "nginx_access"
            }
            remove_field => ["program", "message"]
        }
        mutate {
            add_field => { "read_timestamp" => "%{@timestamp}" }
        }
        date {
            match => [ "[nginx][access][time]", "dd/MMM/YYYY:H:m:s Z" ]
            remove_field => "[nginx][access][time]"
        }
        useragent {
            source => "[nginx][access][agent]"
            target => "[nginx][access][user_agent]"
            remove_field => "[nginx][access][agent]"
        }
        geoip {
            source => "[nginx][access][remote_ip]"
            target => "[nginx][access][geoip]"
          }
  }

  if [program] == "nginx_error" {

  }



grok {
      patterns_dir => "/usr/share/logstash/patterns"
      match => { "message" => "%{NGINX_ERROR}" }
      remove_tag => ["nginx_error", "_grokparsefailure"]
      add_field => {
        "type" => "nginx_error"
      }
      remove_field => ["program"]
    }

    date {
      match => ["time_local", "YYYY/MM/dd HH:mm:ss"]
      target => "@timestamp"
      remove_field => "time_local"
    }


}

output {
    stdout { codec => rubydebug }
    elasticsearch {
        hosts => "elasticsearch:9200"
        index => "nginx"
    }
}